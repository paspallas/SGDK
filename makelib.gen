include $(GDK)/common.gen

SRC_LIB_C   := $(wildcard $(SRC_LIB)/*.c)
SRC_LIB_CPP := $(wildcard $(SRC_LIB)/*.cpp)
SRC_LIB_S   := $(wildcard $(SRC_LIB)/*.s)
SRC_LIB_S80 := $(wildcard $(SRC_LIB)/*.s80)

RES_LIB_RES := $(wildcard $(RES_LIB)/*.res)

OBJ_LIB 	:= $(RES_LIB_RES:.res=.o)
OBJ_LIB 	+= $(SRC_LIB_S80:.s80=.o)
OBJ_LIB 	+= $(SRC_LIB_S:.s=.o)
OBJ_LIB 	+= $(SRC_LIB_C:.c=.o)
OBJ_LIB 	+= $(SRC_LIB_CPP:.cpp=.o)

DEP_LIB 	:= $(SRC_LIB_C:.c=.d)
DEP_LIB 	+= $(SRC_LIB_CPP:.cpp=.d) 

INCS_LIB  	:= -I$(INCLUDE_LIB) -I$(SRC_LIB) -I$(RES_LIB)

release: FLAGS_LIB := $(OPT) $(INCS_LIB) $(NOLTO)
release: $(LIB)/libmd.a cleanobj

debug: FLAGS_LIB := $(INCS_LIB) $(NOLTO) -O1 -ggdb -DDEBUG=1
debug: $(LIB)/libmd_debug.a cleanobj

all: release
default: release

Default: release
Debug: debug
Release: release

.PHONY: clean

cleanobj:
	$(RM) -f $(OBJ_LIB) $(DEP_LIB) out.lst

cleanrelease: cleanobj
	$(RM) -f $(LIB)/libmd.a out.lst cmd_

cleandebug: cleanobj
	$(RM) -f $(LIB)/libmd_debug.a out.lst cmd_

clean: cleanobj
	$(RM) -f $(LIB)/libmd.a $(LIB)/libmd_debug.a out.lst cmd_

cleanall: cleanrelease
cleanAll: cleanrelease
cleandefault: cleanrelease
cleanDefault: cleanrelease
cleanRelease: cleanrelease
cleanDebug: cleandebug

$(LIB)/libmd.a: cmd_
	$(AR) rs $(LIB)/libmd.a @cmd_
	$(RM) cmd_

$(LIB)/libmd_debug.a: cmd_
	$(AR) rs $(LIB)/libmd_debug.a @cmd_
	$(RM) cmd_

cmd_ : $(OBJ_LIB)
	$(ECHO) "$(OBJ_LIB)" > cmd_

%.o: %.c
	$(CC) $(FLAGS_LIB) $(CFLAGS) -c $< -o $@

%.o: %.cpp
	$(CXX) $(FLAGS_LIB) $(CXXFLAGS) -c $< -o $@

%.o: %.s
	$(CC) $(FLAGS_LIB) $(CFLAGS) -c $< -o $@

%.s: %.res
	$(RESCOMP) $< $@

%.o80: %.s80
	$(ASMZ80) $(FLAGSZ80_LIB) $< $@ out.lst

%.s: %.o80
	$(BINTOS) $<

#########################

-include $(DEP_LIB) 
